version: "3.8"

services:
  order-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka
      SPRING_APPLICATION_JSON: >
        {
          "spring": {
            "kafka": {
              "bootstrap-servers": "kafka:9092",
              "consumer": {
                "group-id": "order-group",
                "auto-offset-reset": "earliest",
                "key-deserializer": "org.apache.kafka.common.serialization.StringDeserializer",
                "value-deserializer": "org.apache.kafka.common.serialization.StringDeserializer"
              },
              "producer": {
                "key-serializer": "org.apache.kafka.common.serialization.StringSerializer",
                "value-serializer": "org.apache.kafka.common.serialization.StringSerializer"
              }
            },
            "datasource": {
              "url": "jdbc:mysql://mysql:3306/ordersdb?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true",
              "username": "root",
              "password": "root",
              "driver-class-name": "com.mysql.cj.jdbc.Driver"
            },
            "jpa": {
              "hibernate": {
                "ddl-auto": "update"
              },
              "show-sql": true,
              "properties": {
                "hibernate": {
                  "dialect": "org.hibernate.dialect.MySQL8Dialect"
                }
              }
            }
          },
          "eureka": {
            "client": {
              "register-with-eureka": true,
              "fetch-registry": true,
              "service-url": {
                "defaultZone": "http://discovery-service:8761/eureka"
              }
            },
            "instance": {
              "prefer-ip-address": true,
              "hostname": "order-service"
            }
          }
        }
    networks:
      - order-net

networks:
  order-net:
    driver: bridge
    external: true
